plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version        // For example: "1.0.0"
group = project.maven_group          // For example: "com.example"
base {
	archivesName = project.archives_base_name  // For example: "myfabricmod"
}

repositories {

	maven { url 'https://modrinth.com' }	// Loom automatically adds the essential repos needed for Minecraft, mappings, Fabric Loader and Fabric API.
	// If you depend on additional artifacts, add repositories here.
}

dependencies {
	// Minecraft version; set this in your gradle.properties as minecraft_version=...
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	// Yarn mappings; set your yarn_mappings property (for example: "1.21.4+build.1")
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	// Fabric Loader; set loader_version in your gradle.properties (e.g.: "0.14.17")
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API; set fabric_version property (e.g.: "0.84.0+1.21.4")
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	// Replace placeholders in fabric.mod.json (e.g. ${version})
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Use Java 21 for compiling
	it.options.release = 21
}

java {
	// Generate a sourcesJar which will also be remapped automatically by Loom.
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	// Include the LICENSE into your jar, renaming it if needed.
	from("LICENSE") {
		rename { filename -> "${filename}_${project.archives_base_name}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
	repositories {
		// Configure where to publish your artifact (optional).
		// Example:
		// maven {
		//     name = "MyRepo"
		//     url = uri("https://my.repository.url/releases")
		//     credentials {
		//         username = project.findProperty("repoUser") ?: ""
		//         password = project.findProperty("repoPass") ?: ""
		//     }
		// }
	}
}
